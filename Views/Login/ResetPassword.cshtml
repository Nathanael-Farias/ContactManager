@model ResetPasswordModel

@{
    Layout = "_LayoutUnlogged";
    ViewData["Title"] = "Reset Password";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-body">
                    <h3 class="card-title text-center mb-4">Reset Password</h3>
                    <form id="reset-password-form" asp-controller="Login" asp-action="SendResetPasswordLink" method="post">
                        <div class="mb-3">
                            <label for="Login" class="form-label">Login</label>
                            <input asp-for="Login" type="text" class="form-control" id="login" name="Login" placeholder="Enter your login" required>
                            @Html.ValidationMessageFor(x => x.Login, "", new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            <label for="Email" class="form-label">Email</label>
                            <input asp-for="Email" type="email" class="form-control" id="email" name="Email" placeholder="Enter your email address" required>
                            @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
                        </div>
                        <button type="submit" class="btn btn-primary w-100" id="reset-button">Send Reset Link</button>

                        <div class="d-flex justify-content-between mt-3">
                            <a href="@Url.Action("Index", "Login")" class="btn btn-secondary">Cancel</a>
                            <a href="@Url.Action("Index", "Login")" class="btn btn-success">Done</a>
                        </div>

                        @if (TempData.ContainsKey("ErrorMessage"))
                        {
                            <div class="alert alert-danger mt-3" role="alert">
                                @TempData["ErrorMessage"]
                            </div>
                        }

                        <div id="success-message-container" style="display: none;">
                            @if (TempData.ContainsKey("SuccessMessage"))
                            {
                                <div id="success-alert" class="alert alert-success mt-3" role="alert">
                                    @TempData["SuccessMessage"]
                                </div>
                            }
                        </div>
                    </form>

                    @if (TempData.ContainsKey("SuccessMessage"))
                    {
                        <script>
                            document.addEventListener('DOMContentLoaded', function () {
                                const successMessage = '@TempData["SuccessMessage"]';
                                Swal.fire({
                                    title: 'Success!',
                                    text: successMessage,
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        window.location.href = '@Url.Action("Index", "Login")';
                                    }
                                });
                            });
                        </script>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
